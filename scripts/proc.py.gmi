#!/usr/bin/env python3
from pprint import pprint
import sys
import csv

# Data input
data_reader = csv.DictReader(sys.stdin)
data_input = []
for data_set in data_reader:
    data_input.append(data_set)

# Sort data into a dictionary where key is id andvalue is a list that contains dictionaries that are data sets
data_people = {}
for data_set in data_input:
    try:
        data_people[data_set['ID']].append(data_set)
        data_people[data_set['ID']][len(data_people[data_set['ID']])-1].pop("ID")
    except KeyError:
        data_people[data_set['ID']] = [data_set]
        data_people[data_set['ID']][0].pop("ID")

# Calculates deltas and results
delta_people = {}
delta_sum = {}
delta_sum["sys"] = []
delta_sum["dia"] = []
delta_sum["pr"] = []
for _id in data_people:
    data_person = data_people[_id]
    if len(data_person) != 2:
        print(f"{_id} contains {len(data_person)} rather than 2 datasets, skipping. ", file=sys.stderr)
        continue
    for data_set in data_person:
        if data_set["Exercise"] == "True":
            sys_exe = int(data_set["Systolic"])
            dia_exe = int(data_set["Diastolic"])
            pr_exe = int(data_set["Pulse Rate"])
        elif data_set["Exercise"] == "False":
            sys_rst = int(data_set["Systolic"])
            dia_rst = int(data_set["Diastolic"])
            pr_rst = int(data_set["Pulse Rate"])
        else:
            print(f"{_id} has Exercise something else than True or False, skipping. ", file=sys.stderr)
    delta_people[_id] = {}
    delta_people[_id]["sys"] = str(sys_exe - sys_rst)
    delta_sum["sys"].append(int(sys_exe - sys_rst))
    delta_people[_id]["dia"] = str(dia_exe - dia_rst)
    delta_sum["dia"].append(int(dia_exe - dia_rst))
    delta_people[_id]["pr"] = str(pr_exe - pr_rst)
    delta_sum["pr"].append(int(pr_exe - pr_rst))

avg_d_sys = sum(delta_sum['sys'])/len(data_people)
avg_d_dia = sum(delta_sum['dia'])/len(data_people)
avg_d_pr = sum(delta_sum['pr'])/len(data_people)

# Final output
pprint(delta_people)
print("------------")
print("Average systolic blood pressure delta:", avg_d_sys)
print("Average diastolic blood pressure delta:", avg_d_dia)
print("Average pulse rate pressure delta:", avg_d_pr)
