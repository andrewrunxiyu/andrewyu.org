```
 ____          _ _       _     _               _
/ ___|_      _(_) |_ ___| |__ (_)_ __   __ _  | |_ ___
\___ \ \ /\ / / | __/ __| '_ \| | '_ \ / _` | | __/ _ \
 ___) \ V  V /| | || (__| | | | | | | | (_| | | || (_) |
|____/ \_/\_/ |_|\__\___|_| |_|_|_| |_|\__, |  \__\___/
                                       |___/
  ____                _       _
 / ___| ___ _ __ ___ (_)_ __ (_)
| |  _ / _ \ '_ ` _ \| | '_ \| |
| |_| |  __/ | | | | | | | | | |
 \____|\___|_| |_| |_|_|_| |_|_|

```

#hy

I've recently switched to Gemini as my site protocol instead of HTTP. Gemini is more light weight than HTTP, and it only displays text. This follows the Unix philosophy better: Browsers should download pages and display text, they shouldn't display images or videos. It should be the image viewer or the video player that does these things.

I personally recommend the Gemini client Amfora, since it is terminal-based, lightweight, but colorful. It could be found in most Linux distributions' repositories.

My HTTP site is now basically a portal to my Gemini capsule. However, my HTTP site will continue to have certain features like file caching and file libraries. These are not easy to deal with in Gemini, since my Gemini server, Agate, does not support automatic directory listing. Therefore I would have to write a index.gmi for every directory (or auto-generate them), and I don't have that time.

I am not against HTTP itself; it is only a protocol that transfers files. But how HTTP is implemented basically implies that we use HTML with it. There are no browsers to transfer minimal strict formatting (rather than hard-to-write and hard-to-read HTML), whereas Gemini does.

In Gemini, there is no fancy formatting, and everything looks good to my eyes (plain text). Links have to be on seperate lines to prevent developers from getting sloppy and putting a link everywhere embedded in the text.

These are simple reasons I like Gemini. Contact me if you wish!
